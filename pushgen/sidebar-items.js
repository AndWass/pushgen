initSidebarItems({"enum":[["Either","The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases."],["GeneratorResult","The result of generator runs."],["ValueResult","Value-consumption result."]],"fn":[["from_fn","Creates a new generator where each iteration calls the provided closure `F: FnMut() -> Option<T>`."],["from_iter","Creates a generator that wraps an `Iterator`."]],"mod":[["structs","Generator adaptor implementations. See `GeneratorExt` for more info."],["traits","Helper traits for various operations."]],"struct":[["BoxedGenerator","Box a generator, type-erasing the actual generator type. See `.boxed()` for details."],["SliceGenerator","A generator that generates values from a slice."]],"trait":[["DynGenerator","Sealed trait to enable boxed generators. See `.boxed()` for details."],["Generator","Trait for generating values into a closure."],["GeneratorExt","Provides extension-methods for all generators."],["IntoGenerator",""]]});